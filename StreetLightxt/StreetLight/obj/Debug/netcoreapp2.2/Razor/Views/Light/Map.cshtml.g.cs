#pragma checksum "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bbe87661a2b47ed7f535127ff4b407fe57288f2f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Light_Map), @"mvc.1.0.view", @"/Views/Light/Map.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Light/Map.cshtml", typeof(AspNetCore.Views_Light_Map))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\_ViewImports.cshtml"
using StreetLight;

#line default
#line hidden
#line 2 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\_ViewImports.cshtml"
using StreetLight.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bbe87661a2b47ed7f535127ff4b407fe57288f2f", @"/Views/Light/Map.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d71ee686ccd5105c93c06c624f505a8e29406392", @"/Views/_ViewImports.cshtml")]
    public class Views_Light_Map : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<StreetLight.ViewModels.LightViewModel>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml"
  
    ViewData["Title"] = "Map";

#line default
#line hidden
            BeginContext(85, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(112, 715, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbe87661a2b47ed7f535127ff4b407fe57288f2f3494", async() => {
                BeginContext(118, 702, true);
                WriteLiteral(@"
    <meta http-equiv=""Content-Type"" content=""text/html; charset=gb2312"" />
    <meta name=""viewport"" content=""initial-scale=1.0, user-scalable=no"" />

    <title>地图展示</title>
    <style type=""text/css"">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: ""微软雅黑"";
        }

        #l-map {
            height: 450px;
            width: 100%;
        }

        #r-result {
            width: 100%;
            font-size: 14px;
            line-height: 20px;
        }
    </style>
    <script type=""text/javascript"" src=""//api.map.baidu.com/api?v=2.0&ak=nqtG0A5vll9kpDvFWEhOdUoSzKPpsGhP""></script>

   

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(827, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(829, 194, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbe87661a2b47ed7f535127ff4b407fe57288f2f5392", async() => {
                BeginContext(835, 181, true);
                WriteLiteral("\r\n    \r\n\r\n    <div id=\"l-map\"></div>\r\n    <div id=\"r-result\">\r\n        <input type=\"button\" value=\"批量反地址解析+路灯\" onclick=\"bdGEO(0)\" />\r\n        <div id=\"result\"></div>\r\n    </div>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1023, 46, true);
            WriteLiteral("\r\n</html>\r\n<script type=\"text/javascript\">\r\n\r\n");
            EndContext();
#line 50 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml"
     foreach (var mymap in Model.Lights)
     {


#line default
#line hidden
            BeginContext(1127, 57, true);
            WriteLiteral("\r\n\r\n   \r\n    \r\n\r\n    //alert(arr);\r\n   \r\n    //var arr=[[");
            EndContext();
            BeginContext(1185, 9, false);
#line 60 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml"
           Write(mymap.Lng);

#line default
#line hidden
            EndContext();
            BeginContext(1194, 3, true);
            WriteLiteral("],[");
            EndContext();
            BeginContext(1198, 9, false);
#line 60 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml"
                        Write(mymap.Lat);

#line default
#line hidden
            EndContext();
            BeginContext(1207, 40, true);
            WriteLiteral("]]\r\n   \r\n    var adds = [new BMap.Point(");
            EndContext();
            BeginContext(1248, 9, false);
#line 62 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml"
                          Write(mymap.Lng);

#line default
#line hidden
            EndContext();
            BeginContext(1257, 1, true);
            WriteLiteral(",");
            EndContext();
            BeginContext(1259, 9, false);
#line 62 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml"
                                     Write(mymap.Lat);

#line default
#line hidden
            EndContext();
            BeginContext(1268, 2417, true);
            WriteLiteral(@"),
                new BMap.Point(119.2387, 26.09482),
                new BMap.Point(119.2487, 26.08382),
                new BMap.Point(119.2447, 26.08782),
                new BMap.Point(119.2387, 26.07982),

               ];
               
      
    
    

var map = new BMap.Map(""l-map"");
	map.centerAndZoom(new BMap.Point(119.238749,26.079822), 13);
	map.enableScrollWheelZoom(true);
	var index = 0;
    var myGeo = new BMap.Geocoder();


    var top_left_control = new BMap.ScaleControl({anchor: BMAP_ANCHOR_TOP_LEFT});
    map.addControl(top_left_control);
 var navigationControl = new BMap.NavigationControl({
    // 靠左上角位置
    anchor: BMAP_ANCHOR_TOP_LEFT,
    // LARGE类型
    type: BMAP_NAVIGATION_CONTROL_LARGE,
    // 启用显示定位
    enableGeolocation: true
  });
  map.addControl(navigationControl);
  // 添加定位控件
  var geolocationControl = new BMap.GeolocationControl();
  geolocationControl.addEventListener(""locationSuccess"", function(e){
    // 定位成功事件
    var address = '';
  ");
            WriteLiteral(@"  address += e.addressComponent.province;
    address += e.addressComponent.city;
    address += e.addressComponent.district;
    address += e.addressComponent.street;
    address += e.addressComponent.streetNumber;
    alert(""当前定位地址为："" + address);
  });
  geolocationControl.addEventListener(""locationError"",function(e){
    // 定位失败事件
    alert(e.message);
  });
  map.addControl(geolocationControl);


    for (var i = 0; adds.length > i; i++){

        var marker = new BMap.Marker(adds[i]);
        map.addOverlay(marker);
        marker.setAnimation(BMAP_ANIMATION_BOUNCE);
        var infoWindow1 = new BMap.InfoWindow(""普通标注"");
marker.addEventListener(""click"", function(){this.openInfoWindow(infoWindow1);});

		marker.setLabel(new BMap.Label(""我是路灯:""+(i+1),{offset:new BMap.Size(20,-10)}));
	}
	function bdGEO(){
		var pt = adds[index];
		geocodeSearch(pt);
		index++;
	}
	function geocodeSearch(pt){
		if( adds.length-1 > index){
			setTimeout(window.bdGEO,400);
		}
		myGeo.getLocati");
            WriteLiteral(@"on(pt, function(rs){
			var addComp = rs.addressComponents;
			document.getElementById(""result"").innerHTML += index + "". "" +adds[index-1].lng + "","" + adds[index-1].lat + ""：""  + ""商圈("" + rs.business + "")  结构化数据("" + addComp.province + "", "" + addComp.city + "", "" + addComp.district + "", "" + addComp.street + "", "" + addComp.streetNumber + "")<br/><br/>"";
		});
	}

    ");
            EndContext();
#line 136 "C:\Users\john\Desktop\StreetLight\StreetLight\Views\Light\Map.cshtml"
           


  }

#line default
#line hidden
            BeginContext(3703, 13, true);
            WriteLiteral("\r\n\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<StreetLight.ViewModels.LightViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
